# Default values for base-bot.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: savantly/base-bot
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podEnv: []
  # - name: POD_ENV
  #   value: "prod"

envFrom: []
  # - configMapRef:
  #     name: configmap-name
  # - secretRef:
  #     name: secret-name

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 9000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: base-bot.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: base-bot-tls
  #    hosts:
  #      - base-bot.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Configure the bot
chat_settings:

  rephrase_prompt: |
    Given the following conversation and a follow up question, rephrase the follow up question to be a standalone question.

    Chat History:
    {chat_history}
    Follow Up Input: {question}
    Standalone question:
  
  qa_prompt: |
    Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

    {context}

    Question: {question}
    Helpful Answer:

# These settings can also be overridden by environment variables
# In the format of: SAVANTLY_CHAT_<SETTING_NAME>
  additional: |
    VECTORSTORE_CREATE_IF_MISSING = True
    VECTORSTORE_VARIANTS = []

    LOGGING_LEVEL = "DEBUG"
    LLM_REPRHASING_MODEL = "gpt-3.5-turbo"
    LLM_REPHRASING_TEMPERATURE = 0.0
    LLM_REPHRASING_VERBOSE = True
    LLM_STREAMING_MODEL = "gpt-3.5-turbo"
    LLM_STREAMING_TEMPERATURE = 0.5
    LLM_STREAMING_VERBOSE = True
    LLM_MODULE = "openai"

    UI_PAGE_TITLE = "Savantly Base Bot"
    UI_PAGE_DESCRIPTION = "Savantly Base Bot"
    UI_PAGE_FAVICON = "https://savantly.net/img/favicon.png"
    UI_SHOW_HEADER = True
    UI_HEADER_CENTER = True
    UI_HEADER_TITLE = "BASEBOT"
    UI_HEADER_LOGO_SRC = "https://savantly.net/img/logo.png"
    UI_HEADER_LOGO_ALT = "Savantly Logo"
    UI_HEADER_LOGO_HREF = "https://savantly.net"
    UI_CHAT_BOT_NAME = "BaseBot"

    # Chatwoot
    CHATWOOT_ENABLED = False
    CHATWOOT_URL = "https://chatwoot.com"
    CHATWOOT_BOT_TOKEN = ""
    CHATWOOT_BOT_VARIANT = ""